/* Generic HEURIST page layout:

     #page
       ,--------------------------------.
       | #header                        |
       |--------------------------------|
       | #toolbar                       |
       |--------------------------------|
       | #main                          |
       |,------------------------------.|
       ||#main-table |                 ||
       ||,----------.|,---------------.||
       |||#left-    |||#right-panel   |||
       ||| panel    |||               |||
       ||`----------'|`---------------'||
       |`-----------------------------'||
       |--------------------------------|
       | #footer                        |
       `--------------------------------'

   We use a lot of tables so that we can have flowy-layout.
   #page is a top-level table which expands to exactly the size of the viewport,
   #header, #toolbar and #footer have fixed heights, so #main expands to the
   remaining height; #left-panel has a fixed width so #right-panel expands to
   the remaining width.

     .panel
       ,-------------------------------.
       |,-----------------------------.|
       ||.panel-header                ||
       ||-----------------------------||
       ||.panel-main                  ||
       ||,---------------------------.||
       |||.panel-main-div            |||
       |||,-------------------------.|||
       ||||.panel-main-content     ^||||
       ||||                        #||||
       ||||                        #||||
       ||||                        v||||
       |||`-------------------------'|||
       ||`---------------------------'||
       ||-----------------------------||
       ||.panel-footer                ||
       |`-----------------------------'|
       `-------------------------------'

   Both #left-panel and #right-panel are in the .panel class.
   .panel cells contain another table which expands to the size of the cell,
   this contains a .panel-header and .panel-footer of fixed height,
   so .panel-main expands to the rest of the height; .panel-main-div expands
   to the size of the (inside of) .panel-main; and .panel-main-content is
   a scrolling div set by javascript to the size of .panel-main-div.  Whew!

   BE CAREFUL not to set borders, padding or margin on any element that requires
   precise sizing, because some browsers (mozilla etc) count this as part of
   the size.  e.g. A div with border: 1px and width: 100%, which sits inside
   an element of width 200px, will expand to a width of 202px.
   IN GENERAL, (width and height) in the mozilla family means the INSIDE of
   the element (what it can contain), whereas (width and height) elsewhere
   measures the OUTSIDE of the element (border and padding included).

   Hence it is okay to set padding on .panel-header, .panel-main, .panel-footer
   but little else.

   NOTE ALSO that table borders, cellspacing and cellpadding are set to 0
   in HTML because there is no way to set cellspacing in CSS on IE6.

   Oooh, also: IE does not like content-free cells with dynamic sizing.
   No no no.  If you really want an empty cell, just put a &nbsp; in it or such.

*/
