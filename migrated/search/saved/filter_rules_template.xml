<!-- Heurist Vsn 4 Filter Rule specifications example  draft 16 July 2014, see end for explanation -->

<level_0 rectype=12,13> <!-- specifies the set of rules and queries to be applied to records of this type or types -->
    <rules>
        <pointer field=45 targetrectype=17,29 />
        <pointer field=71 targetrectype=all />
        <relationship field=37 reltype=8,9 targetrectype=17,29 />
        <heuristquery q="f:37:1982" />
    </rules>

    <level_1 rectype=14,17>
        <rules>
            <pointer field=18 targetrectype=39 />
            <relationship field=25 reltype=8,9 targetrectype=45 />
            <heuristquery q="The Reverend" />
        </rules>

        <level_2 rectype=all>
            <rules>
                <pointer field=34 targetrectype=41 />
                <heuristquery q="f:25" />
            </rules>
        </level_2>

    </level_1>

    <level_1 rectype=29>
        <rules>
            <!-- rules here -->
        </rules>

        <level_2 rectype=92>
            <rules>
                <!-- rules here -->
            </rules>
        </level_2>

    </level_1>

</level_0>


<!-- --------------------------------------------------------------------------------------------------------------------- -->

<level_0 rectype=12,13> <!-- another set of rules to be applied to a different (or the same) set of record type(s) -->

    <!-- another set of levels and rules -->

</level_0>


<!-- --------------------------------------------------------------------------------------------------------------------- -->

<level_0 rectype=98> <!-- another set of rules to be applied to a different (or the same) set of record type(s) -->

    <!-- another set of levels and rules -->

</level_0>



<!-- --------------------------------------------------------------------------------------------------------------------- -->

DISCUSSION

At each level, we specify a record type or types followed by a set of rules and a query.
Starting with each record of a specified type, we follow the rules to find all connected records (known as secondary records).

If rules are omitted from a level specification, nothing further is retrieved within that level or subsidiary levels,
that is secondary records are additive, not filtered (as in current levels model). This avoids the sort of server-killing
behaviour we currently associate with highly interconnected databases.

If the query is omitted from a level, no further filtering is applied within that level

The rules specify:

--- which pointer or relationship marker fields to follow
--- which relationship types to follow for relationship markers
--- what target record types to filter for
--- an additional standard Heurist filter applied to the set of records thus identified

This system does not - as specified - allow connections on free relationships (ie. relationships not specified in a relationship
marker field) or reverse pointers. These need to be handled however - see questions at end.

Keywords (any, all) may be specified in place of a list of record types or relationship types

Example rule:

    pointer field=45 targetrectype=17,29
       pointer field 45 but only select records of type 17 and 29

    relationship field=37 reltype=8,9 targetrectype=all
       relationship marker field 37, relationship types 8 or 9, any target record type

Errors to test for and report:

--- field does not exist or is not pointer/relationship marker
--- targetrectype does not specify any, all or valid list of IDs
--- pointer field does not list the specified record types as target record types
--- relationship marker does not list the specified relationship types as valid relationship terms


PROCESS:

Queries entered in the search box will simply process the query. The user can then trigger a rule set by choosing from the Layout menu (to be renamed?)

Saved searches will first display the set of records satisfying the search criteria, sorted as specified, then will trigger any rule set attached to the search.

Each set of rules is processed to produce a set of results. These are then combined, duplicates eliminated, and overall sorting citeria are applied

It's important to store the following information, as visualisation of the network of relationships will require it:

--- Each record retains information about the level(s) at which it sits and how it is connected to other records (it may have multiple connections)

--- Each connection retains information on the level at which it occured, the two records linked, the pointer or relationship marker field and the relationship type

Level 1, 2, 3 etc. records will be displayed in a separate section below the primary search set.

Where the primary search set is paginated, secondary level records will be filtered to only include those connected to the primary records

Questions:

--- Should we make this easy on ourselves by overriding pagination so that everything shows on one page?
--- or altrernatively, display secondary records in levels (note that records may occur in more than one secondary level).
--- Use of levels to some degree overcomes problem of sorting

--- How do we sort secondary records? Primary sort (if we combine into a single search page), allow sorting to be specified for each level
--- or allow single sort for all secondaries (if combined in single section below primaries)?

--- Current levels system also displays records which have unconstrained relationships and/or point back or are related back to current level. How to handle this?
